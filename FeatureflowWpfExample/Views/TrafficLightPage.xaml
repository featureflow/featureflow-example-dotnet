<main:BaseExamplePage x:Class="FeatureflowWpfExample.Views.TrafficLightView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:main="clr-namespace:FeatureflowWpfExample"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="TrafficLightView"
      x:Name="myself"
      DataContext="{Binding ElementName=myself}">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TextBlock Style="{StaticResource ExampleCaptionTextStyle}">
            <Span>This example displays that the feature can contains more than two values. In our case the feature named</Span>
            <Span Foreground="DarkBlue">color-set</Span>
            <Span> have three values: 'red', 'yellow' and 'green'.</Span>
            <LineBreak/>
            <Span>You can create different rules to manage them all in your</Span>
            <Span Foreground="Blue">featureflow.io</Span>
            <Span>account. Selected color displays current feature value.</Span>
        </TextBlock>

        <ItemsControl Grid.Row="2" ItemsSource="{Binding Colors}"
                      HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Center"
                      Margin="10">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid IsItemsHost="True" Rows="3" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="Point">
                    <Ellipse Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                             Stretch="Uniform"
                             Margin="4,4,4,4">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="true" >
                                        <Setter Property="Opacity" Value="1" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="false" >
                                        <Setter Property="Opacity" Value="0.1" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</main:BaseExamplePage>
